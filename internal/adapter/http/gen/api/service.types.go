// Package api_service provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api_service

import (
	"time"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for Action.
const (
	CREATE Action = "CREATE"
	DELETE Action = "DELETE"
	UPDATE Action = "UPDATE"
	VIEW   Action = "VIEW"
)

// Defines values for ErrorType.
const (
	InternalError    ErrorType = "internal_error"
	PermissionDenied ErrorType = "permission_denied"
	RequestNotFound  ErrorType = "request_not_found"
	ValidationFailed ErrorType = "validation_failed"
)

// Defines values for Severity.
const (
	CRITICAL Severity = "CRITICAL"
	ERROR    Severity = "ERROR"
	INFO     Severity = "INFO"
	WARNING  Severity = "WARNING"
)

// Action defines model for Action.
type Action string

// CreateLogRequestBody defines model for CreateLogRequestBody.
type CreateLogRequestBody struct {
	Action         Action                  `json:"action"`
	After          *map[string]interface{} `json:"after,omitempty"`
	Before         *map[string]interface{} `json:"before,omitempty"`
	EventTimestamp time.Time               `json:"event_timestamp"`
	IpAddress      *string                 `json:"ip_address,omitempty"`
	Message        *string                 `json:"message,omitempty"`
	Metadata       *map[string]interface{} `json:"metadata,omitempty"`
	Resource       *string                 `json:"resource,omitempty"`
	ResourceId     *string                 `json:"resource_id,omitempty"`
	SessionId      *string                 `json:"session_id,omitempty"`
	Severity       Severity                `json:"severity"`
	TenantId       string                  `json:"tenant_id"`
	UserAgent      *string                 `json:"user_agent,omitempty"`
	UserId         string                  `json:"user_id"`
}

// CreateLogResponse defines model for CreateLogResponse.
type CreateLogResponse struct {
	// EventTimestamp Timestamp
	EventTimestamp string `json:"event_timestamp"`

	// Id UUID
	Id string `json:"id"`
}

// CreateTenantRequestBody defines model for CreateTenantRequestBody.
type CreateTenantRequestBody struct {
	Name string `json:"name"`
}

// Error defines model for Error.
type Error struct {
	// Code Custom error code
	Code string `json:"code"`

	// Detail Detailed error description
	Detail string `json:"detail"`

	// Title Error Summary
	Title string    `json:"title"`
	Type  ErrorType `json:"type"`
}

// ErrorType defines model for Error.Type.
type ErrorType string

// GenerateTokenRequestBody defines model for GenerateTokenRequestBody.
type GenerateTokenRequestBody struct {
	Role     string `json:"role"`
	TenantId string `json:"tenant_id"`
	UserId   string `json:"user_id"`
}

// GenerateTokenResponse defines model for GenerateTokenResponse.
type GenerateTokenResponse struct {
	Token string `json:"token"`
}

// GetSingleLogResponse defines model for GetSingleLogResponse.
type GetSingleLogResponse struct {
	Action Action                  `json:"action"`
	After  *map[string]interface{} `json:"after,omitempty"`
	Before *map[string]interface{} `json:"before,omitempty"`

	// EventTimestamp Timestamp
	EventTimestamp string `json:"event_timestamp"`

	// Id UUID
	Id         string                  `json:"id"`
	IpAddress  *string                 `json:"ip_address,omitempty"`
	Message    *string                 `json:"message,omitempty"`
	Metadata   *map[string]interface{} `json:"metadata,omitempty"`
	Resource   *string                 `json:"resource,omitempty"`
	ResourceId *string                 `json:"resource_id,omitempty"`
	SessionId  *string                 `json:"session_id,omitempty"`
	Severity   Severity                `json:"severity"`
	TenantId   string                  `json:"tenant_id"`
	UserAgent  *string                 `json:"user_agent,omitempty"`
	UserId     string                  `json:"user_id"`
}

// LogStat defines model for LogStat.
type LogStat struct {
	// CREATE Number of CREATE logs
	CREATE int64 `json:"CREATE"`

	// CRITICAL Number of CRITICAL logs
	CRITICAL int64 `json:"CRITICAL"`

	// DELETE Number of DELETE logs
	DELETE int64 `json:"DELETE"`

	// Day The day of the aggregated stats
	Day string `json:"Day"`

	// ERROR Number of ERROR logs
	ERROR int64 `json:"ERROR"`

	// INFO Number of INFO logs
	INFO int64 `json:"INFO"`

	// Total Total logs for the day
	Total int64 `json:"Total"`

	// UPDATE Number of UPDATE logs
	UPDATE int64 `json:"UPDATE"`

	// VIEW Number of VIEW logs
	VIEW int64 `json:"VIEW"`

	// WARNING Number of WARNING logs
	WARNING int64 `json:"WARNING"`
}

// Pong defines model for Pong.
type Pong struct {
	Ping string `json:"ping"`
}

// Severity defines model for Severity.
type Severity string

// Tenant defines model for Tenant.
type Tenant struct {
	// CreatedAt Timestamp
	CreatedAt string `json:"created_at"`

	// Id uuid string
	Id   string `json:"id"`
	Name string `json:"name"`

	// UpdatedAt Timestamp
	UpdatedAt string `json:"updated_at"`
}

// InlineResponse200 defines model for inline_response_200.
type InlineResponse200 struct {
	Items      []GetSingleLogResponse `json:"items"`
	PageNumber int                    `json:"page_number"`
	PageSize   int                    `json:"page_size"`
	Total      int64                  `json:"total"`
}

// SearchLogsParams defines parameters for SearchLogs.
type SearchLogsParams struct {
	// UserId Filter by user
	UserId *string `form:"user_id,omitempty" json:"user_id,omitempty"`

	// Action Filter by action type
	Action *Action `form:"action,omitempty" json:"action,omitempty"`

	// Resource Filter by resource type
	Resource *string `form:"resource,omitempty" json:"resource,omitempty"`

	// Severity Filter by severity
	Severity  *Severity  `form:"severity,omitempty" json:"severity,omitempty"`
	StartTime *time.Time `form:"startTime,omitempty" json:"startTime,omitempty"`
	EndTime   *time.Time `form:"endTime,omitempty" json:"endTime,omitempty"`

	// Q Full-text search across message + metadata
	Q          *string `form:"q,omitempty" json:"q,omitempty"`
	PageNumber *int    `form:"pageNumber,omitempty" json:"pageNumber,omitempty"`
	PageSize   *int    `form:"pageSize,omitempty" json:"pageSize,omitempty"`
}

// CreateBulkLogsJSONBody defines parameters for CreateBulkLogs.
type CreateBulkLogsJSONBody = []CreateLogRequestBody

// CleanupLogsParams defines parameters for CleanupLogs.
type CleanupLogsParams struct {
	BeforeDate time.Time `form:"beforeDate" json:"beforeDate"`
}

// GetLogsStatParams defines parameters for GetLogsStat.
type GetLogsStatParams struct {
	StartDate time.Time  `form:"startDate" json:"startDate"`
	EndDate   *time.Time `form:"endDate,omitempty" json:"endDate,omitempty"`
}

// GenerateTokenJSONRequestBody defines body for GenerateToken for application/json ContentType.
type GenerateTokenJSONRequestBody = GenerateTokenRequestBody

// CreateLogJSONRequestBody defines body for CreateLog for application/json ContentType.
type CreateLogJSONRequestBody = CreateLogRequestBody

// CreateBulkLogsJSONRequestBody defines body for CreateBulkLogs for application/json ContentType.
type CreateBulkLogsJSONRequestBody = CreateBulkLogsJSONBody

// CreateTenantJSONRequestBody defines body for CreateTenant for application/json ContentType.
type CreateTenantJSONRequestBody = CreateTenantRequestBody
