// Code generated by MockGen. DO NOT EDIT.
// Source: tenant_repository.go
//
// Generated by this command:
//
//	mockgen -source=tenant_repository.go -destination=./mocks/mock_tenant_repository.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	tenant "github.com/Haevnen/audit-logging-api/internal/entity/tenant"
	gomock "go.uber.org/mock/gomock"
)

// MockTenantRepository is a mock of TenantRepository interface.
type MockTenantRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTenantRepositoryMockRecorder
	isgomock struct{}
}

// MockTenantRepositoryMockRecorder is the mock recorder for MockTenantRepository.
type MockTenantRepositoryMockRecorder struct {
	mock *MockTenantRepository
}

// NewMockTenantRepository creates a new mock instance.
func NewMockTenantRepository(ctrl *gomock.Controller) *MockTenantRepository {
	mock := &MockTenantRepository{ctrl: ctrl}
	mock.recorder = &MockTenantRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTenantRepository) EXPECT() *MockTenantRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTenantRepository) Create(ctx context.Context, t *tenant.Tenant) (*tenant.Tenant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, t)
	ret0, _ := ret[0].(*tenant.Tenant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockTenantRepositoryMockRecorder) Create(ctx, t any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTenantRepository)(nil).Create), ctx, t)
}

// List mocks base method.
func (m *MockTenantRepository) List(ctx context.Context) ([]tenant.Tenant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]tenant.Tenant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockTenantRepositoryMockRecorder) List(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockTenantRepository)(nil).List), ctx)
}
